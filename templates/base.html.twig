<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <title>{% block title %}Welcome!{% endblock %}</title>
  {# Run `composer require symfony/webpack-encore-bundle`
           and uncomment the following Encore helpers to start using Symfony UX #}
  {{ encore_entry_link_tags('app') }}
  {% block stylesheets %}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">
    {# {{ encore_entry_link_tags('app') }} #}
  {% endblock %}

  {% block javascripts %}
    {# {{ encore_entry_script_tags('app') }} #}
  {% endblock %}
</head>
<body>
{% for label, messages in app.flashes %}
  {% for message in messages %}
    <div class="alert alert-dismissible mb-0" role="alert" id="liveAlert" data-label="{{ label }}">
      {{ message }}
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  {% endfor %}
{% endfor %}

{% block header %}
  {% set headerLinks = [] %}
  {% if is_granted('ROLE_ADMIN') %}
    {% set headerLinks = headerLinks|merge([{'name': 'Admin' , 'link': 'admin'}]) %}
  {% endif %}
  {% set headerLinks = headerLinks|merge([{'name': 'Home' , 'link': 'home'}]) %}
  {% set headerLinks = headerLinks|merge([{'name': 'Search' , 'link': 'ticket_search'}]) %}
  {% if is_granted('ROLE_USER') %}
    {% set headerLinks = headerLinks|merge([{'name': 'My tickets' , 'link': 'ticket_index'}]) %}
  {% endif %}

  {% include '_header.html.twig' with headerLinks %}
{% endblock %}
<main class="mx-5">

  {% block body %}{% endblock %}
</main>
{{ encore_entry_script_tags('app') }}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj"
        crossorigin="anonymous">
</script>
<script>
  try {
    const link = document.querySelector(`li a[href='${window.location.pathname}']`);
    link.classList.remove('text-white');
    link.classList.add('text-secondary');
  } catch (e) {
  }

  document.querySelectorAll('.alert').forEach(alert => {
    let className = 'alert-';

    switch (alert.dataset.label) {
      case 'success':
        className += 'success';
        break;
      case 'notice':
        className += 'primary';
        break;
      case 'warning':
        className += 'warning';
        break;
      case 'error':
        className += 'danger';
        break;
      default:
        className += 'primary';
    }

    alert.classList.add(className);
  });

  setTimeout(() => {
    if (document.querySelectorAll('.alert').length) {
      document.querySelectorAll('.alert').forEach(alert => alert.remove());
    }
  }, 5000);
</script>
</body>
</html>